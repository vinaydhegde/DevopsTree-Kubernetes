{"ast":null,"code":"var _jsxFileName = \"/home/vinay/Desktop/react-tree/react-tree/react-tree/src/Tree/index.js\";\nimport React from \"react\"; // import { treeData } from \"./data\";\n\nimport * as d3 from \"d3\";\nimport \"./index.css\";\n\nconst Tree = props => {\n  var treeData = props.data;\n\n  if (Object.keys(treeData).length < 1) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 12\n      }\n    });\n  } // Set the dimensions and margins of the diagram\n\n\n  var margin = {\n    top: 20,\n    right: 90,\n    bottom: 30,\n    left: 90\n  },\n      width = 960 - margin.left - margin.right,\n      height = 500 - margin.top - margin.bottom; // append the svg object to the body of the page\n  // appends a 'group' element to 'svg'\n  // moves the 'group' element to the top left margin\n\n  var svg = d3.select(\"body\").append(\"svg\").attr(\"width\", width + margin.right + margin.left).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  var i = 0,\n      duration = 750,\n      root; // declares a tree layout and assigns the size\n\n  var treemap = d3.tree().size([height, width]); // Assigns parent, children, height, depth\n\n  root = d3.hierarchy(treeData, function (d) {\n    return d.children;\n  });\n  root.x0 = height / 2;\n  root.y0 = 0; // Collapse after the second level\n\n  root.children.forEach(collapse);\n  update(root); // Collapse the node and all it's children\n\n  function collapse(d) {\n    if (d.children) {\n      d._children = d.children;\n\n      d._children.forEach(collapse);\n\n      d.children = null;\n    }\n  }\n\n  function update(source) {\n    // Assigns the x and y position for the nodes\n    var treeData = treemap(root); // Compute the new tree layout.\n\n    var nodes = treeData.descendants(),\n        links = treeData.descendants().slice(1); // Normalize for fixed-depth.\n\n    nodes.forEach(function (d) {\n      d.y = d.depth * 180;\n    }); // ****************** Nodes section ***************************\n    // Update the nodes...\n\n    var node = svg.selectAll(\"g.node\").data(nodes, function (d) {\n      return d.id || (d.id = ++i);\n    }); //add tooltip\n\n    var div = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0); // Enter any new modes at the parent's previous position.\n\n    var nodeEnter = node.enter().append(\"g\").attr(\"class\", \"node\").attr(\"transform\", function (d) {\n      return \"translate(\" + source.y0 + \",\" + source.x0 + \")\";\n    }).on(\"click\", click); // Add Circle for the nodes\n\n    nodeEnter.append(\"circle\").attr(\"class\", \"node\").attr(\"r\", 1e-6).style(\"fill\", function (d) {\n      return d._children ? \"lightsteelblue\" : \"#fff\";\n    }).on(\"mouseover\", function (d) {\n      div.transition().duration(200).style(\"opacity\", 0.9);\n      div.html(d.data.tooltip).style(\"left\", d3.event.pageX + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n    }).on(\"mouseout\", function (d) {\n      div.transition().duration(500).style(\"opacity\", 0);\n    }); // Add labels for the nodes\n\n    nodeEnter.append(\"text\").attr(\"dy\", \".35em\").attr(\"x\", function (d) {\n      return d.children || d._children ? -13 : 13;\n    }).attr(\"text-anchor\", function (d) {\n      return d.children || d._children ? \"end\" : \"start\";\n    }).text(function (d) {\n      return d.data.name;\n    }); // UPDATE\n\n    var nodeUpdate = nodeEnter.merge(node); // Transition to the proper position for the node\n\n    nodeUpdate.transition().duration(duration).attr(\"transform\", function (d) {\n      return \"translate(\" + d.y + \",\" + d.x + \")\";\n    }); // Update the node attributes and style\n\n    nodeUpdate.select(\"circle.node\").attr(\"r\", 10).style(\"fill\", function (d) {\n      return d._children ? \"lightsteelblue\" : \"#fff\";\n    }).attr(\"cursor\", \"pointer\"); // Remove any exiting nodes\n\n    var nodeExit = node.exit().transition().duration(duration).attr(\"transform\", function (d) {\n      return \"translate(\" + source.y + \",\" + source.x + \")\";\n    }).remove(); // On exit reduce the node circles size to 0\n\n    nodeExit.select(\"circle\").attr(\"r\", 1e-6); // On exit reduce the opacity of text labels\n\n    nodeExit.select(\"text\").style(\"fill-opacity\", 1e-6); // ****************** links section ***************************\n    // Update the links...\n\n    var link = svg.selectAll(\"path.link\").data(links, function (d) {\n      return d.id;\n    }); // Enter any new links at the parent's previous position.\n\n    var linkEnter = link.enter().insert(\"path\", \"g\").attr(\"class\", \"link\").attr(\"d\", function (d) {\n      var o = {\n        x: source.x0,\n        y: source.y0\n      };\n      return diagonal(o, o);\n    }); // UPDATE\n\n    var linkUpdate = linkEnter.merge(link); // Transition back to the parent element position\n\n    linkUpdate.transition().duration(duration).attr(\"d\", function (d) {\n      return diagonal(d, d.parent);\n    }); // Remove any exiting links\n\n    var linkExit = link.exit().transition().duration(duration).attr(\"d\", function (d) {\n      var o = {\n        x: source.x,\n        y: source.y\n      };\n      return diagonal(o, o);\n    }).remove(); // Store the old positions for transition.\n\n    nodes.forEach(function (d) {\n      d.x0 = d.x;\n      d.y0 = d.y;\n    }); // Creates a curved (diagonal) path from parent to the child nodes\n\n    function diagonal(s, d) {\n      const path = `M ${s.y} ${s.x}\n        C ${(s.y + d.y) / 2} ${s.x},\n          ${(s.y + d.y) / 2} ${d.x},\n          ${d.y} ${d.x}`;\n      return path;\n    } // Toggle children on click.\n\n\n    function click(d) {\n      if (d.children) {\n        d._children = d.children;\n        d.children = null;\n      } else {\n        d.children = d._children;\n        d._children = null;\n      }\n\n      update(d);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 10\n    }\n  }, \"Devops Tree\");\n};\n\nexport default Tree;","map":{"version":3,"sources":["/home/vinay/Desktop/react-tree/react-tree/react-tree/src/Tree/index.js"],"names":["React","d3","Tree","props","treeData","data","Object","keys","length","margin","top","right","bottom","left","width","height","svg","select","append","attr","i","duration","root","treemap","tree","size","hierarchy","d","children","x0","y0","forEach","collapse","update","_children","source","nodes","descendants","links","slice","y","depth","node","selectAll","id","div","style","nodeEnter","enter","on","click","transition","html","tooltip","event","pageX","pageY","text","name","nodeUpdate","merge","x","nodeExit","exit","remove","link","linkEnter","insert","o","diagonal","linkUpdate","parent","linkExit","s","path"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n// import { treeData } from \"./data\";\r\nimport * as d3 from \"d3\";\r\nimport \"./index.css\";\r\nconst Tree = props => {\r\n  var treeData = props.data;\r\n  if (Object.keys(treeData).length < 1) {\r\n    return <div></div>;\r\n  }\r\n  // Set the dimensions and margins of the diagram\r\n  var margin = { top: 20, right: 90, bottom: 30, left: 90 },\r\n    width = 960 - margin.left - margin.right,\r\n    height = 500 - margin.top - margin.bottom;\r\n\r\n  // append the svg object to the body of the page\r\n  // appends a 'group' element to 'svg'\r\n  // moves the 'group' element to the top left margin\r\n  var svg = d3\r\n    .select(\"body\")\r\n    .append(\"svg\")\r\n    .attr(\"width\", width + margin.right + margin.left)\r\n    .attr(\"height\", height + margin.top + margin.bottom)\r\n    .append(\"g\")\r\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n  var i = 0,\r\n    duration = 750,\r\n    root;\r\n\r\n  // declares a tree layout and assigns the size\r\n  var treemap = d3.tree().size([height, width]);\r\n\r\n  // Assigns parent, children, height, depth\r\n  root = d3.hierarchy(treeData, function(d) {\r\n    return d.children;\r\n  });\r\n  root.x0 = height / 2;\r\n  root.y0 = 0;\r\n\r\n  // Collapse after the second level\r\n  root.children.forEach(collapse);\r\n\r\n  update(root);\r\n\r\n  // Collapse the node and all it's children\r\n  function collapse(d) {\r\n    if (d.children) {\r\n      d._children = d.children;\r\n      d._children.forEach(collapse);\r\n      d.children = null;\r\n    }\r\n  }\r\n\r\n  function update(source) {\r\n    // Assigns the x and y position for the nodes\r\n    var treeData = treemap(root);\r\n\r\n    // Compute the new tree layout.\r\n    var nodes = treeData.descendants(),\r\n      links = treeData.descendants().slice(1);\r\n\r\n    // Normalize for fixed-depth.\r\n    nodes.forEach(function(d) {\r\n      d.y = d.depth * 180;\r\n    });\r\n\r\n    // ****************** Nodes section ***************************\r\n\r\n    // Update the nodes...\r\n    var node = svg.selectAll(\"g.node\").data(nodes, function(d) {\r\n      return d.id || (d.id = ++i);\r\n    });\r\n\r\n    //add tooltip\r\n    var div = d3\r\n      .select(\"body\")\r\n      .append(\"div\")\r\n      .attr(\"class\", \"tooltip\")\r\n      .style(\"opacity\", 0);\r\n    // Enter any new modes at the parent's previous position.\r\n    var nodeEnter = node\r\n      .enter()\r\n      .append(\"g\")\r\n      .attr(\"class\", \"node\")\r\n      .attr(\"transform\", function(d) {\r\n        return \"translate(\" + source.y0 + \",\" + source.x0 + \")\";\r\n      })\r\n      .on(\"click\", click);\r\n\r\n    // Add Circle for the nodes\r\n    nodeEnter\r\n      .append(\"circle\")\r\n      .attr(\"class\", \"node\")\r\n      .attr(\"r\", 1e-6)\r\n      .style(\"fill\", function(d) {\r\n        return d._children ? \"lightsteelblue\" : \"#fff\";\r\n      })\r\n      .on(\"mouseover\", function(d) {\r\n        div\r\n          .transition()\r\n          .duration(200)\r\n          .style(\"opacity\", 0.9);\r\n        div\r\n          .html(d.data.tooltip)\r\n          .style(\"left\", d3.event.pageX + \"px\")\r\n          .style(\"top\", d3.event.pageY - 28 + \"px\");\r\n      })\r\n      .on(\"mouseout\", function(d) {\r\n        div\r\n          .transition()\r\n          .duration(500)\r\n          .style(\"opacity\", 0);\r\n      });\r\n\r\n    // Add labels for the nodes\r\n    nodeEnter\r\n      .append(\"text\")\r\n      .attr(\"dy\", \".35em\")\r\n      .attr(\"x\", function(d) {\r\n        return d.children || d._children ? -13 : 13;\r\n      })\r\n      .attr(\"text-anchor\", function(d) {\r\n        return d.children || d._children ? \"end\" : \"start\";\r\n      })\r\n      .text(function(d) {\r\n        return d.data.name;\r\n      });\r\n\r\n    // UPDATE\r\n    var nodeUpdate = nodeEnter.merge(node);\r\n\r\n    // Transition to the proper position for the node\r\n    nodeUpdate\r\n      .transition()\r\n      .duration(duration)\r\n      .attr(\"transform\", function(d) {\r\n        return \"translate(\" + d.y + \",\" + d.x + \")\";\r\n      });\r\n\r\n    // Update the node attributes and style\r\n    nodeUpdate\r\n      .select(\"circle.node\")\r\n      .attr(\"r\", 10)\r\n      .style(\"fill\", function(d) {\r\n        return d._children ? \"lightsteelblue\" : \"#fff\";\r\n      })\r\n      .attr(\"cursor\", \"pointer\");\r\n\r\n    // Remove any exiting nodes\r\n    var nodeExit = node\r\n      .exit()\r\n      .transition()\r\n      .duration(duration)\r\n      .attr(\"transform\", function(d) {\r\n        return \"translate(\" + source.y + \",\" + source.x + \")\";\r\n      })\r\n      .remove();\r\n\r\n    // On exit reduce the node circles size to 0\r\n    nodeExit.select(\"circle\").attr(\"r\", 1e-6);\r\n\r\n    // On exit reduce the opacity of text labels\r\n    nodeExit.select(\"text\").style(\"fill-opacity\", 1e-6);\r\n\r\n    // ****************** links section ***************************\r\n\r\n    // Update the links...\r\n    var link = svg.selectAll(\"path.link\").data(links, function(d) {\r\n      return d.id;\r\n    });\r\n\r\n    // Enter any new links at the parent's previous position.\r\n    var linkEnter = link\r\n      .enter()\r\n      .insert(\"path\", \"g\")\r\n      .attr(\"class\", \"link\")\r\n      .attr(\"d\", function(d) {\r\n        var o = { x: source.x0, y: source.y0 };\r\n        return diagonal(o, o);\r\n      });\r\n\r\n    // UPDATE\r\n    var linkUpdate = linkEnter.merge(link);\r\n\r\n    // Transition back to the parent element position\r\n    linkUpdate\r\n      .transition()\r\n      .duration(duration)\r\n      .attr(\"d\", function(d) {\r\n        return diagonal(d, d.parent);\r\n      });\r\n\r\n    // Remove any exiting links\r\n    var linkExit = link\r\n      .exit()\r\n      .transition()\r\n      .duration(duration)\r\n      .attr(\"d\", function(d) {\r\n        var o = { x: source.x, y: source.y };\r\n        return diagonal(o, o);\r\n      })\r\n      .remove();\r\n\r\n    // Store the old positions for transition.\r\n    nodes.forEach(function(d) {\r\n      d.x0 = d.x;\r\n      d.y0 = d.y;\r\n    });\r\n\r\n    // Creates a curved (diagonal) path from parent to the child nodes\r\n    function diagonal(s, d) {\r\n      const path = `M ${s.y} ${s.x}\r\n        C ${(s.y + d.y) / 2} ${s.x},\r\n          ${(s.y + d.y) / 2} ${d.x},\r\n          ${d.y} ${d.x}`;\r\n\r\n      return path;\r\n    }\r\n\r\n    // Toggle children on click.\r\n    function click(d) {\r\n      if (d.children) {\r\n        d._children = d.children;\r\n        d.children = null;\r\n      } else {\r\n        d.children = d._children;\r\n        d._children = null;\r\n      }\r\n      update(d);\r\n    }\r\n  }\r\n  return <h1>Devops Tree</h1>;\r\n};\r\nexport default Tree;\r\n"]},"metadata":{},"sourceType":"module"}