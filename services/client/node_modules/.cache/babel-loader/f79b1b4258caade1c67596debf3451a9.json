{"ast":null,"code":"import React from\"react\";// import { treeData } from \"./data\";\nimport*as d3 from\"d3\";import\"./index.css\";var Tree=function Tree(props){var treeData=props.data;if(Object.keys(treeData).length<1){return/*#__PURE__*/React.createElement(\"div\",null);}// Set the dimensions and margins of the diagram\nvar margin={top:20,right:90,bottom:30,left:90},width=960-margin.left-margin.right,height=500-margin.top-margin.bottom;// append the svg object to the body of the page\n// appends a 'group' element to 'svg'\n// moves the 'group' element to the top left margin\nvar svg=d3.select(\"body\").append(\"svg\").attr(\"width\",width+margin.right+margin.left).attr(\"height\",height+margin.top+margin.bottom).append(\"g\").attr(\"transform\",\"translate(\"+margin.left+\",\"+margin.top+\")\");var i=0,duration=750,root;// declares a tree layout and assigns the size\nvar treemap=d3.tree().size([height,width]);// Assigns parent, children, height, depth\nroot=d3.hierarchy(treeData,function(d){return d.children;});root.x0=height/2;root.y0=0;// Collapse after the second level\nroot.children.forEach(collapse);update(root);// Collapse the node and all it's children\nfunction collapse(d){if(d.children){d._children=d.children;d._children.forEach(collapse);d.children=null;}}function update(source){// Assigns the x and y position for the nodes\nvar treeData=treemap(root);// Compute the new tree layout.\nvar nodes=treeData.descendants(),links=treeData.descendants().slice(1);// Normalize for fixed-depth.\nnodes.forEach(function(d){d.y=d.depth*180;});// ****************** Nodes section ***************************\n// Update the nodes...\nvar node=svg.selectAll(\"g.node\").data(nodes,function(d){return d.id||(d.id=++i);});//add tooltip\nvar div=d3.select(\"body\").append(\"div\").attr(\"class\",\"tooltip\").style(\"opacity\",0);// Enter any new modes at the parent's previous position.\nvar nodeEnter=node.enter().append(\"g\").attr(\"class\",\"node\").attr(\"transform\",function(d){return\"translate(\"+source.y0+\",\"+source.x0+\")\";}).on(\"click\",click);// Add Circle for the nodes\nnodeEnter.append(\"circle\").attr(\"class\",\"node\").attr(\"r\",1e-6).style(\"fill\",function(d){return d._children?\"lightsteelblue\":\"#fff\";}).on(\"mouseover\",function(d){div.transition().duration(200).style(\"opacity\",0.9);div.html(d.data.tooltip).style(\"left\",d3.event.pageX+\"px\").style(\"top\",d3.event.pageY-28+\"px\");}).on(\"mouseout\",function(d){div.transition().duration(500).style(\"opacity\",0);});// Add labels for the nodes\nnodeEnter.append(\"text\").attr(\"dy\",\".35em\").attr(\"x\",function(d){return d.children||d._children?-13:13;}).attr(\"text-anchor\",function(d){return d.children||d._children?\"end\":\"start\";}).text(function(d){return d.data.name;});// UPDATE\nvar nodeUpdate=nodeEnter.merge(node);// Transition to the proper position for the node\nnodeUpdate.transition().duration(duration).attr(\"transform\",function(d){return\"translate(\"+d.y+\",\"+d.x+\")\";});// Update the node attributes and style\nnodeUpdate.select(\"circle.node\").attr(\"r\",10).style(\"fill\",function(d){return d._children?\"lightsteelblue\":\"#fff\";}).attr(\"cursor\",\"pointer\");// Remove any exiting nodes\nvar nodeExit=node.exit().transition().duration(duration).attr(\"transform\",function(d){return\"translate(\"+source.y+\",\"+source.x+\")\";}).remove();// On exit reduce the node circles size to 0\nnodeExit.select(\"circle\").attr(\"r\",1e-6);// On exit reduce the opacity of text labels\nnodeExit.select(\"text\").style(\"fill-opacity\",1e-6);// ****************** links section ***************************\n// Update the links...\nvar link=svg.selectAll(\"path.link\").data(links,function(d){return d.id;});// Enter any new links at the parent's previous position.\nvar linkEnter=link.enter().insert(\"path\",\"g\").attr(\"class\",\"link\").attr(\"d\",function(d){var o={x:source.x0,y:source.y0};return diagonal(o,o);});// UPDATE\nvar linkUpdate=linkEnter.merge(link);// Transition back to the parent element position\nlinkUpdate.transition().duration(duration).attr(\"d\",function(d){return diagonal(d,d.parent);});// Remove any exiting links\nvar linkExit=link.exit().transition().duration(duration).attr(\"d\",function(d){var o={x:source.x,y:source.y};return diagonal(o,o);}).remove();// Store the old positions for transition.\nnodes.forEach(function(d){d.x0=d.x;d.y0=d.y;});// Creates a curved (diagonal) path from parent to the child nodes\nfunction diagonal(s,d){var path=\"M \".concat(s.y,\" \").concat(s.x,\"\\n        C \").concat((s.y+d.y)/2,\" \").concat(s.x,\",\\n          \").concat((s.y+d.y)/2,\" \").concat(d.x,\",\\n          \").concat(d.y,\" \").concat(d.x);return path;}// Toggle children on click.\nfunction click(d){if(d.children){d._children=d.children;d.children=null;}else{d.children=d._children;d._children=null;}update(d);}}return/*#__PURE__*/React.createElement(\"h1\",null,\"Devops Tree\");};export default Tree;","map":{"version":3,"sources":["/home/vinay/Desktop/devops-tree-k8s/services/client/src/Tree/index.js"],"names":["React","d3","Tree","props","treeData","data","Object","keys","length","margin","top","right","bottom","left","width","height","svg","select","append","attr","i","duration","root","treemap","tree","size","hierarchy","d","children","x0","y0","forEach","collapse","update","_children","source","nodes","descendants","links","slice","y","depth","node","selectAll","id","div","style","nodeEnter","enter","on","click","transition","html","tooltip","event","pageX","pageY","text","name","nodeUpdate","merge","x","nodeExit","exit","remove","link","linkEnter","insert","o","diagonal","linkUpdate","parent","linkExit","s","path"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n// import { treeData } from \"./data\";\r\nimport * as d3 from \"d3\";\r\nimport \"./index.css\";\r\nconst Tree = props => {\r\n  var treeData = props.data;\r\n  if (Object.keys(treeData).length < 1) {\r\n    return <div></div>;\r\n  }\r\n  // Set the dimensions and margins of the diagram\r\n  var margin = { top: 20, right: 90, bottom: 30, left: 90 },\r\n    width = 960 - margin.left - margin.right,\r\n    height = 500 - margin.top - margin.bottom;\r\n\r\n  // append the svg object to the body of the page\r\n  // appends a 'group' element to 'svg'\r\n  // moves the 'group' element to the top left margin\r\n  var svg = d3\r\n    .select(\"body\")\r\n    .append(\"svg\")\r\n    .attr(\"width\", width + margin.right + margin.left)\r\n    .attr(\"height\", height + margin.top + margin.bottom)\r\n    .append(\"g\")\r\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n  var i = 0,\r\n    duration = 750,\r\n    root;\r\n\r\n  // declares a tree layout and assigns the size\r\n  var treemap = d3.tree().size([height, width]);\r\n\r\n  // Assigns parent, children, height, depth\r\n  root = d3.hierarchy(treeData, function(d) {\r\n    return d.children;\r\n  });\r\n  root.x0 = height / 2;\r\n  root.y0 = 0;\r\n\r\n  // Collapse after the second level\r\n  root.children.forEach(collapse);\r\n\r\n  update(root);\r\n\r\n  // Collapse the node and all it's children\r\n  function collapse(d) {\r\n    if (d.children) {\r\n      d._children = d.children;\r\n      d._children.forEach(collapse);\r\n      d.children = null;\r\n    }\r\n  }\r\n\r\n  function update(source) {\r\n    // Assigns the x and y position for the nodes\r\n    var treeData = treemap(root);\r\n\r\n    // Compute the new tree layout.\r\n    var nodes = treeData.descendants(),\r\n      links = treeData.descendants().slice(1);\r\n\r\n    // Normalize for fixed-depth.\r\n    nodes.forEach(function(d) {\r\n      d.y = d.depth * 180;\r\n    });\r\n\r\n    // ****************** Nodes section ***************************\r\n\r\n    // Update the nodes...\r\n    var node = svg.selectAll(\"g.node\").data(nodes, function(d) {\r\n      return d.id || (d.id = ++i);\r\n    });\r\n\r\n    //add tooltip\r\n    var div = d3\r\n      .select(\"body\")\r\n      .append(\"div\")\r\n      .attr(\"class\", \"tooltip\")\r\n      .style(\"opacity\", 0);\r\n    // Enter any new modes at the parent's previous position.\r\n    var nodeEnter = node\r\n      .enter()\r\n      .append(\"g\")\r\n      .attr(\"class\", \"node\")\r\n      .attr(\"transform\", function(d) {\r\n        return \"translate(\" + source.y0 + \",\" + source.x0 + \")\";\r\n      })\r\n      .on(\"click\", click);\r\n\r\n    // Add Circle for the nodes\r\n    nodeEnter\r\n      .append(\"circle\")\r\n      .attr(\"class\", \"node\")\r\n      .attr(\"r\", 1e-6)\r\n      .style(\"fill\", function(d) {\r\n        return d._children ? \"lightsteelblue\" : \"#fff\";\r\n      })\r\n      .on(\"mouseover\", function(d) {\r\n        div\r\n          .transition()\r\n          .duration(200)\r\n          .style(\"opacity\", 0.9);\r\n        div\r\n          .html(d.data.tooltip)\r\n          .style(\"left\", d3.event.pageX + \"px\")\r\n          .style(\"top\", d3.event.pageY - 28 + \"px\");\r\n      })\r\n      .on(\"mouseout\", function(d) {\r\n        div\r\n          .transition()\r\n          .duration(500)\r\n          .style(\"opacity\", 0);\r\n      });\r\n\r\n    // Add labels for the nodes\r\n    nodeEnter\r\n      .append(\"text\")\r\n      .attr(\"dy\", \".35em\")\r\n      .attr(\"x\", function(d) {\r\n        return d.children || d._children ? -13 : 13;\r\n      })\r\n      .attr(\"text-anchor\", function(d) {\r\n        return d.children || d._children ? \"end\" : \"start\";\r\n      })\r\n      .text(function(d) {\r\n        return d.data.name;\r\n      });\r\n\r\n    // UPDATE\r\n    var nodeUpdate = nodeEnter.merge(node);\r\n\r\n    // Transition to the proper position for the node\r\n    nodeUpdate\r\n      .transition()\r\n      .duration(duration)\r\n      .attr(\"transform\", function(d) {\r\n        return \"translate(\" + d.y + \",\" + d.x + \")\";\r\n      });\r\n\r\n    // Update the node attributes and style\r\n    nodeUpdate\r\n      .select(\"circle.node\")\r\n      .attr(\"r\", 10)\r\n      .style(\"fill\", function(d) {\r\n        return d._children ? \"lightsteelblue\" : \"#fff\";\r\n      })\r\n      .attr(\"cursor\", \"pointer\");\r\n\r\n    // Remove any exiting nodes\r\n    var nodeExit = node\r\n      .exit()\r\n      .transition()\r\n      .duration(duration)\r\n      .attr(\"transform\", function(d) {\r\n        return \"translate(\" + source.y + \",\" + source.x + \")\";\r\n      })\r\n      .remove();\r\n\r\n    // On exit reduce the node circles size to 0\r\n    nodeExit.select(\"circle\").attr(\"r\", 1e-6);\r\n\r\n    // On exit reduce the opacity of text labels\r\n    nodeExit.select(\"text\").style(\"fill-opacity\", 1e-6);\r\n\r\n    // ****************** links section ***************************\r\n\r\n    // Update the links...\r\n    var link = svg.selectAll(\"path.link\").data(links, function(d) {\r\n      return d.id;\r\n    });\r\n\r\n    // Enter any new links at the parent's previous position.\r\n    var linkEnter = link\r\n      .enter()\r\n      .insert(\"path\", \"g\")\r\n      .attr(\"class\", \"link\")\r\n      .attr(\"d\", function(d) {\r\n        var o = { x: source.x0, y: source.y0 };\r\n        return diagonal(o, o);\r\n      });\r\n\r\n    // UPDATE\r\n    var linkUpdate = linkEnter.merge(link);\r\n\r\n    // Transition back to the parent element position\r\n    linkUpdate\r\n      .transition()\r\n      .duration(duration)\r\n      .attr(\"d\", function(d) {\r\n        return diagonal(d, d.parent);\r\n      });\r\n\r\n    // Remove any exiting links\r\n    var linkExit = link\r\n      .exit()\r\n      .transition()\r\n      .duration(duration)\r\n      .attr(\"d\", function(d) {\r\n        var o = { x: source.x, y: source.y };\r\n        return diagonal(o, o);\r\n      })\r\n      .remove();\r\n\r\n    // Store the old positions for transition.\r\n    nodes.forEach(function(d) {\r\n      d.x0 = d.x;\r\n      d.y0 = d.y;\r\n    });\r\n\r\n    // Creates a curved (diagonal) path from parent to the child nodes\r\n    function diagonal(s, d) {\r\n      const path = `M ${s.y} ${s.x}\r\n        C ${(s.y + d.y) / 2} ${s.x},\r\n          ${(s.y + d.y) / 2} ${d.x},\r\n          ${d.y} ${d.x}`;\r\n\r\n      return path;\r\n    }\r\n\r\n    // Toggle children on click.\r\n    function click(d) {\r\n      if (d.children) {\r\n        d._children = d.children;\r\n        d.children = null;\r\n      } else {\r\n        d.children = d._children;\r\n        d._children = null;\r\n      }\r\n      update(d);\r\n    }\r\n  }\r\n  return <h1>Devops Tree</h1>;\r\n};\r\nexport default Tree;\r\n"]},"metadata":{},"sourceType":"module"}